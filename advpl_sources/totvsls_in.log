Content-Length: 6812
{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":100304,"clientInfo":{"name":"Visual Studio Code","version":"1.86.0"},"locale":"en","rootPath":"w:\\ws_tds_vscode\\tds-dito\\advpl_sources","rootUri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"changeAnnotationSupport":{"groupsOnLabel":true}},"configuration":true,"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]},"resolveSupport":{"properties":["location.range"]}},"codeLens":{"refreshSupport":true},"executeCommand":{"dynamicRegistration":true},"didChangeConfiguration":{"dynamicRegistration":true},"workspaceFolders":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"dynamicRegistration":true,"didCreate":true,"didRename":true,"didDelete":true,"willCreate":true,"willRename":true,"willDelete":true},"inlineValue":{"refreshSupport":true},"inlayHint":{"refreshSupport":true},"diagnostics":{"refreshSupport":true}},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]},"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"insertTextMode":2,"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionList":{"itemDefaults":["commitCharacters","editRange","insertTextFormat","insertTextMode"]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"tagSupport":{"valueSet":[1]},"labelSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"disabledSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit"]},"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"honorsChangeAnnotations":false},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1,"honorsChangeAnnotations":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true,"foldingRangeKind":{"valueSet":["comment","imports","region"]},"foldingRange":{"collapsedText":false}},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"formats":["relative"],"requests":{"range":true,"full":{"delta":true}},"multilineTokenSupport":false,"overlappingTokenSupport":false,"serverCancelSupport":true,"augmentsSyntaxTokens":true},"linkedEditingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"inlineValue":{"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["tooltip","textEdits","label.tooltip","label.location","label.command"]}},"diagnostic":{"dynamicRegistration":true,"relatedDocumentSupport":false}},"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"showDocument":{"support":true},"workDoneProgress":true},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":["textDocument/semanticTokens/full","textDocument/semanticTokens/range","textDocument/semanticTokens/full/delta"]},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"},"markdown":{"parser":"marked","version":"1.1.0","allowedTags":["ul","li","p","code","blockquote","ol","h1","h2","h3","h4","h5","h6","hr","em","pre","table","thead","tbody","tr","th","td","div","del","a","strong","br","img","span"]},"positionEncodings":["utf-16"]},"notebookDocument":{"synchronization":{"dynamicRegistration":true,"executionSummarySupport":true}}},"initializationOptions":{"launchArgs":["--log-file=totvsls.log","--record=totvsls"],"settings":[{"scope":"advpls","key":"fsencoding","value":"cp1252"},{"scope":"advpls","key":"notificationlevel","value":"errors and warnings"},{"scope":"server","key":"usageInfo","value":"disabled"},{"scope":"linter","key":"behavior","value":"enableOnlyOpenFiles"},{"scope":"linter","key":"includes","value":"M:\\protheus\\includes;M:\\protheus\\includes_tlpp"},{"scope":"editor","key":"hoverMode","value":"markDown"},{"scope":"editor","key":"indexCache","value":"off"},{"scope":"editor","key":"codeLens","value":"true"},{"scope":"editor","key":"signatureHelp","value":"true"},{"scope":"editor","key":"autocomplete","value":"LS"},{"scope":"extension","key":"tdsversion","value":"2.0.4"}]},"trace":"verbose","workspaceFolders":[{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources","name":"advpl_sources"}]}}
Content-Length: 52
{"jsonrpc":"2.0","method":"initialized","params":{}}
Content-Length: 10380
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw","languageId":"advpl","version":1,"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}}}
Content-Length: 693
{"jsonrpc":"2.0","id":1,"method":"$totvsserver/reconnect","params":{"reconnectInfo":{"connectionToken":"djM6MGxkdG9xZjNidW9scndiOG03cXQ5aGF5czVtaTFjOjE6bG9jYWxob3N0OjIwMzAyOjE6Ny4wMC4yMTAzMjRQOjM=:djE6cDEyMTMzOmFkbWluOkZYYzVlSHVlTVdLVVVuU2tPUlpUQU1aNzAyQ3dQaUtseFlFeEx4SzhVLzQ9|djI6MTcwNjkwMTk4MTowOjE6MQ==.XeZV0hffXA6ipi9f66U8aWRo+8G37LYXSoGhZfyLM4qBOCVTGAnQFZ6ah9v1vdzf2SlIWCInp1J36H/76SbXuXZE8YBMbic+vSqXAxbslv8kfQMPdXVdlGEBg64t10xpgXFf66/mYug8q2XX/iyyl9PNHtVBTwQPZ/L3fHRCpDVqAovOuYTbtOSDoFioRIot5kGaGNSm+4Vw348+GthKrjeTR3KyWFuLk5fC4RtvW6gKw/jr4FaYJ5UYEsiFygXu3OB6UkzHt5FJr6DJwT8h86pVFwJNZL9GAPb+DSPo0wzyq3dnLdOkJILyh5sk0f9c6mn8BdF8HBZKPBkGHt3hRA==","serverName":"localhost","connType":3}}}
Content-Length: 161
{"jsonrpc":"2.0","id":2,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw"}}}
Content-Length: 38
{"jsonrpc":"2.0","id":1,"result":null}
Content-Length: 62
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}
Content-Length: 161
{"jsonrpc":"2.0","id":3,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw"}}}
Content-Length: 163
{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw"}}}
Content-Length: 62
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}
Content-Length: 161
{"jsonrpc":"2.0","id":5,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw"}}}
Content-Length: 168
{"jsonrpc":"2.0","id":6,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw"}}}
Content-Length: 62
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}
Content-Length: 161
{"jsonrpc":"2.0","id":7,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw"}}}
Content-Length: 157
{"jsonrpc":"2.0","id":8,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw"}}}
Content-Length: 673
{"jsonrpc":"2.0","id":9,"method":"$totvsserver/serverInformations","params":{"serverInformationsInfo":{"connectionToken":"djM6MGxkdG9xZjNidW9scndiOG03cXQ5aGF5czVtaTFjOjE6bG9jYWxob3N0OjIwMzAyOjE6Ny4wMC4yMTAzMjRQOjM=:djE6cDEyMTMzOmFkbWluOkZYYzVlSHVlTVdLVVVuU2tPUlpUQU1aNzAyQ3dQaUtseFlFeEx4SzhVLzQ9|djI6MTcwNjkwMzA1MzowOjE6MQ==.ccA6Uuh62QhGBRZPRk2FQ21Q/jtk3V5/VvjR65Zb7pXc8E1i6ErAjG0OQNhTki7lQKb0Q3OThGvyFBtONMwSSUYHPRk4jbS3VMujZgTTSIsxpmd6dOEpjif5A3F3iklLBX2fxPRRWv1+Xa1pbJJSbTuI7t5wzYnw1z2hFlkdyxvoqg976VVB+udD868nYG0ns6r1XdKihA/7ka8KPU/WK/SNcBWORwD/gMlw8SIrqHuRbYoPJXujnXSkU3VY/5IeeRsQgypFViyaGB98bbQ9Y0dC9l0Dbbt8TXKTNsEuGFyuAB3p2CsH15UUoWljj/umGvtNyf7KQbz0vIolkGHdew=="}}}
Content-Length: 236
{"jsonrpc":"2.0","id":10,"method":"workspace/willRenameFiles","params":{"files":[{"oldUri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw","newUri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}]}}
Content-Length: 150
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw"}}}
Content-Length: 10381
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","languageId":"advpl","version":1,"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}}}
Content-Length: 227
{"jsonrpc":"2.0","method":"workspace/didRenameFiles","params":{"files":[{"oldUri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.prw","newUri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}]}}
Content-Length: 165
{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 170
{"jsonrpc":"2.0","id":12,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 163
{"jsonrpc":"2.0","id":13,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 195
{"jsonrpc":"2.0","id":14,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":294,"character":54}}}
Content-Length: 1254
{"jsonrpc":"2.0","id":15,"method":"$totvsserver/compilation","params":{"compilationInfo":{"connectionToken":"djM6MGxkdG9xZjNidW9scndiOG03cXQ5aGF5czVtaTFjOjE6bG9jYWxob3N0OjIwMzAyOjE6Ny4wMC4yMTAzMjRQOjM=:djE6cDEyMTMzOmFkbWluOkZYYzVlSHVlTVdLVVVuU2tPUlpUQU1aNzAyQ3dQaUtseFlFeEx4SzhVLzQ9|djI6MTcwNjkwMzA1MzowOjE6MQ==.ccA6Uuh62QhGBRZPRk2FQ21Q/jtk3V5/VvjR65Zb7pXc8E1i6ErAjG0OQNhTki7lQKb0Q3OThGvyFBtONMwSSUYHPRk4jbS3VMujZgTTSIsxpmd6dOEpjif5A3F3iklLBX2fxPRRWv1+Xa1pbJJSbTuI7t5wzYnw1z2hFlkdyxvoqg976VVB+udD868nYG0ns6r1XdKihA/7ka8KPU/WK/SNcBWORwD/gMlw8SIrqHuRbYoPJXujnXSkU3VY/5IeeRsQgypFViyaGB98bbQ9Y0dC9l0Dbbt8TXKTNsEuGFyuAB3p2CsH15UUoWljj/umGvtNyf7KQbz0vIolkGHdew==","authorizationToken":"","environment":"p12133","includeUris":["file:///m%3A/protheus/includes","file:///m%3A/protheus/includes_tlpp"],"fileUris":["file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"],"compileOptions":{"recompile":true,"debugAphInfo":true,"gradualSending":true,"generatePpoFile":false,"showPreCompiler":false,"priorVelocity":true,"returnPpo":false,"commitWithErrorOrWarning":false},"extensionsAllowed":[".PRW",".PRX",".PRG",".PPX",".PPP",".TLPP",".APW",".APH",".APL",".AHU",".TRES",".PNG",".BMP",".RES",".4GL",".PER",".JS",".RPTDESIGN"],"includeUrisRequired":true}}}
Content-Length: 697
{"jsonrpc":"2.0","id":16,"method":"$totvsserver/inspectorFunctions","params":{"inspectorFunctionsInfo":{"connectionToken":"djM6MGxkdG9xZjNidW9scndiOG03cXQ5aGF5czVtaTFjOjE6bG9jYWxob3N0OjIwMzAyOjE6Ny4wMC4yMTAzMjRQOjM=:djE6cDEyMTMzOmFkbWluOkZYYzVlSHVlTVdLVVVuU2tPUlpUQU1aNzAyQ3dQaUtseFlFeEx4SzhVLzQ9|djI6MTcwNjkwMzA1MzowOjE6MQ==.ccA6Uuh62QhGBRZPRk2FQ21Q/jtk3V5/VvjR65Zb7pXc8E1i6ErAjG0OQNhTki7lQKb0Q3OThGvyFBtONMwSSUYHPRk4jbS3VMujZgTTSIsxpmd6dOEpjif5A3F3iklLBX2fxPRRWv1+Xa1pbJJSbTuI7t5wzYnw1z2hFlkdyxvoqg976VVB+udD868nYG0ns6r1XdKihA/7ka8KPU/WK/SNcBWORwD/gMlw8SIrqHuRbYoPJXujnXSkU3VY/5IeeRsQgypFViyaGB98bbQ9Y0dC9l0Dbbt8TXKTNsEuGFyuAB3p2CsH15UUoWljj/umGvtNyf7KQbz0vIolkGHdew==","environment":"p12133"}}}
Content-Length: 163
{"jsonrpc":"2.0","id":17,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 170
{"jsonrpc":"2.0","id":18,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":19,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 195
{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":294,"character":64}}}
Content-Length: 195
{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":297,"character":24}}}
Content-Length: 195
{"jsonrpc":"2.0","id":22,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":294,"character":46}}}
Content-Length: 195
{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":290,"character":43}}}
Content-Length: 159
{"jsonrpc":"2.0","id":24,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 200
{"jsonrpc":"2.0","id":25,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":290,"character":43}}}
Content-Length: 159
{"jsonrpc":"2.0","id":26,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 195
{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":315,"character":23}}}
Content-Length: 193
{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":40,"character":6}}}
Content-Length: 193
{"jsonrpc":"2.0","id":29,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":39,"character":2}}}
Content-Length: 193
{"jsonrpc":"2.0","id":30,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":38,"character":1}}}
Content-Length: 10384
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":2},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tpMETHOD New(oDlg) CONSTRUCTOR\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 10385
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":3},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tpuMETHOD New(oDlg) CONSTRUCTOR\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 170
{"jsonrpc":"2.0","id":31,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":32,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10386
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":4},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tpubMETHOD New(oDlg) CONSTRUCTOR\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 159
{"jsonrpc":"2.0","id":33,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 170
{"jsonrpc":"2.0","id":34,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 165
{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10388
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":6},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tpubliMETHOD New(oDlg) CONSTRUCTOR\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 170
{"jsonrpc":"2.0","id":36,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10390
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":8},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tpublic METHOD New(oDlg) CONSTRUCTOR\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 170
{"jsonrpc":"2.0","id":37,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":38,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 165
{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 163
{"jsonrpc":"2.0","id":40,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 1254
{"jsonrpc":"2.0","id":41,"method":"$totvsserver/compilation","params":{"compilationInfo":{"connectionToken":"djM6MGxkdG9xZjNidW9scndiOG03cXQ5aGF5czVtaTFjOjE6bG9jYWxob3N0OjIwMzAyOjE6Ny4wMC4yMTAzMjRQOjM=:djE6cDEyMTMzOmFkbWluOkZYYzVlSHVlTVdLVVVuU2tPUlpUQU1aNzAyQ3dQaUtseFlFeEx4SzhVLzQ9|djI6MTcwNjkwMzA1MzowOjE6MQ==.ccA6Uuh62QhGBRZPRk2FQ21Q/jtk3V5/VvjR65Zb7pXc8E1i6ErAjG0OQNhTki7lQKb0Q3OThGvyFBtONMwSSUYHPRk4jbS3VMujZgTTSIsxpmd6dOEpjif5A3F3iklLBX2fxPRRWv1+Xa1pbJJSbTuI7t5wzYnw1z2hFlkdyxvoqg976VVB+udD868nYG0ns6r1XdKihA/7ka8KPU/WK/SNcBWORwD/gMlw8SIrqHuRbYoPJXujnXSkU3VY/5IeeRsQgypFViyaGB98bbQ9Y0dC9l0Dbbt8TXKTNsEuGFyuAB3p2CsH15UUoWljj/umGvtNyf7KQbz0vIolkGHdew==","authorizationToken":"","environment":"p12133","includeUris":["file:///m%3A/protheus/includes","file:///m%3A/protheus/includes_tlpp"],"fileUris":["file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"],"compileOptions":{"recompile":true,"debugAphInfo":true,"gradualSending":true,"generatePpoFile":false,"showPreCompiler":false,"priorVelocity":true,"returnPpo":false,"commitWithErrorOrWarning":false},"extensionsAllowed":[".PRW",".PRX",".PRG",".PPX",".PPP",".TLPP",".APW",".APH",".APL",".AHU",".TRES",".PNG",".BMP",".RES",".4GL",".PER",".JS",".RPTDESIGN"],"includeUrisRequired":true}}}
Content-Length: 193
{"jsonrpc":"2.0","id":42,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":38,"character":7}}}
Content-Length: 159
{"jsonrpc":"2.0","id":43,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 194
{"jsonrpc":"2.0","id":44,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":39,"character":19}}}
Content-Length: 199
{"jsonrpc":"2.0","id":45,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":39,"character":20}}}
Content-Length: 10383
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":9},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 159
{"jsonrpc":"2.0","id":46,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 170
{"jsonrpc":"2.0","id":47,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 165
{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 163
{"jsonrpc":"2.0","id":49,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10385
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":10},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 159
{"jsonrpc":"2.0","id":50,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 170
{"jsonrpc":"2.0","id":51,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 165
{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10392
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":11},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 159
{"jsonrpc":"2.0","id":53,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 170
{"jsonrpc":"2.0","id":54,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 165
{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 163
{"jsonrpc":"2.0","id":56,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 1254
{"jsonrpc":"2.0","id":57,"method":"$totvsserver/compilation","params":{"compilationInfo":{"connectionToken":"djM6MGxkdG9xZjNidW9scndiOG03cXQ5aGF5czVtaTFjOjE6bG9jYWxob3N0OjIwMzAyOjE6Ny4wMC4yMTAzMjRQOjM=:djE6cDEyMTMzOmFkbWluOkZYYzVlSHVlTVdLVVVuU2tPUlpUQU1aNzAyQ3dQaUtseFlFeEx4SzhVLzQ9|djI6MTcwNjkwMzA1MzowOjE6MQ==.ccA6Uuh62QhGBRZPRk2FQ21Q/jtk3V5/VvjR65Zb7pXc8E1i6ErAjG0OQNhTki7lQKb0Q3OThGvyFBtONMwSSUYHPRk4jbS3VMujZgTTSIsxpmd6dOEpjif5A3F3iklLBX2fxPRRWv1+Xa1pbJJSbTuI7t5wzYnw1z2hFlkdyxvoqg976VVB+udD868nYG0ns6r1XdKihA/7ka8KPU/WK/SNcBWORwD/gMlw8SIrqHuRbYoPJXujnXSkU3VY/5IeeRsQgypFViyaGB98bbQ9Y0dC9l0Dbbt8TXKTNsEuGFyuAB3p2CsH15UUoWljj/umGvtNyf7KQbz0vIolkGHdew==","authorizationToken":"","environment":"p12133","includeUris":["file:///m%3A/protheus/includes","file:///m%3A/protheus/includes_tlpp"],"fileUris":["file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"],"compileOptions":{"recompile":true,"debugAphInfo":true,"gradualSending":true,"generatePpoFile":false,"showPreCompiler":false,"priorVelocity":true,"returnPpo":false,"commitWithErrorOrWarning":false},"extensionsAllowed":[".PRW",".PRX",".PRG",".PPX",".PPP",".TLPP",".APW",".APH",".APL",".AHU",".TRES",".PNG",".BMP",".RES",".4GL",".PER",".JS",".RPTDESIGN"],"includeUrisRequired":true}}}
Content-Length: 194
{"jsonrpc":"2.0","id":58,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":42,"character":32}}}
Content-Length: 159
{"jsonrpc":"2.0","id":59,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":60,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":61,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":62,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 195
{"jsonrpc":"2.0","id":63,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":253,"character":14}}}
Content-Length: 200
{"jsonrpc":"2.0","id":64,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":253,"character":15}}}
Content-Length: 195
{"jsonrpc":"2.0","id":65,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":253,"character":13}}}
Content-Length: 195
{"jsonrpc":"2.0","id":66,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":253,"character":13}}}
Content-Length: 200
{"jsonrpc":"2.0","id":67,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":253,"character":14}}}
Content-Length: 159
{"jsonrpc":"2.0","id":68,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":69,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 194
{"jsonrpc":"2.0","id":70,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":253,"character":6}}}
Content-Length: 194
{"jsonrpc":"2.0","id":71,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":70,"character":18}}}
Content-Length: 159
{"jsonrpc":"2.0","id":72,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":73,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 194
{"jsonrpc":"2.0","id":74,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":70,"character":15}}}
Content-Length: 159
{"jsonrpc":"2.0","id":75,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":76,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":77,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":78,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":79,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 195
{"jsonrpc":"2.0","id":80,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":252,"character":21}}}
Content-Length: 159
{"jsonrpc":"2.0","id":81,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 194
{"jsonrpc":"2.0","id":82,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":252,"character":9}}}
Content-Length: 10390
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":12},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 159
{"jsonrpc":"2.0","id":83,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 170
{"jsonrpc":"2.0","id":84,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 165
{"jsonrpc":"2.0","id":85,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 163
{"jsonrpc":"2.0","id":86,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10391
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":13},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 159
{"jsonrpc":"2.0","id":87,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 170
{"jsonrpc":"2.0","id":88,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 165
{"jsonrpc":"2.0","id":89,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10393
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":15},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,re| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 170
{"jsonrpc":"2.0","id":90,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":91,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10394
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":16},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,rec| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 159
{"jsonrpc":"2.0","id":92,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 170
{"jsonrpc":"2.0","id":93,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 165
{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 163
{"jsonrpc":"2.0","id":95,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10389
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":19},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,rec| { Self:aData[rec,1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 170
{"jsonrpc":"2.0","id":96,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 159
{"jsonrpc":"2.0","id":97,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 165
{"jsonrpc":"2.0","id":98,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 163
{"jsonrpc":"2.0","id":99,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10383
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":21},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,rec| { Self:aData[rec,1], Self:aData[re,2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":100,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10384
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":22},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":101,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":102,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":103,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":104,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10378
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":24},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[re,3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":105,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":106,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10379
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":25},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[rec,3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":107,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":108,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":109,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":110,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10384
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":26},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":111,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":112,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":113,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10389
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":27},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,rec| { Self:aData[rec,1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":114,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10394
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":28},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,rec| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":115,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10392
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":30},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":116,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":117,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":118,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":119,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":120,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10390
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":31},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":121,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":122,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":123,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":124,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10392
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":33},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, | { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":125,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":126,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":128,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10394
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":35},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, re| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":129,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":130,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10395
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":36},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":131,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":132,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":133,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":134,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10389
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":38},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[re,1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":135,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10390
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":39},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":136,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":137,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":138,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":139,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10387
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":41},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[\"+ci,2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":140,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10385
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":43},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[\"+,2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":141,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10382
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":45},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[,2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":142,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10384
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":47},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[re,2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":143,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10385
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":48},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":144,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":145,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":146,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":147,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10382
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":50},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[\"+ci,3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":148,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10380
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":52},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[\"+,3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":149,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10379
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":53},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":150,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":151,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":152,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10377
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":54},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[,3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":153,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":154,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":155,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10379
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":56},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[re,3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":156,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10380
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":57},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[rec,3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":157,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":158,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":159,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":160,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10378
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":58},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[rec,3] } }\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":161,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":162,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":163,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":164,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10377
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":59},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[rec,3] } }\r\n\t\t::oGrid:setRowData( i, cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":165,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":166,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":167,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":168,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10379
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":61},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[rec,3] } }\r\n\t\t::oGrid:setRowData( i, cb,  )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":169,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":170,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":171,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":172,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10380
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":62},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[rec,3] } }\r\n\t\t::oGrid:setRowData( i, cb, n )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":173,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":174,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":175,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10382
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":64},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[rec,3] } }\r\n\t\t::oGrid:setRowData( i, cb, nre )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":176,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10383
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":65},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[rec,3] } }\r\n\t\t::oGrid:setRowData( i, cb, nrec )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":177,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":178,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":179,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":180,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10379
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":66},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[rec,3] } }\r\n\t\t::oGrid:setRowData( i, cb,  )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":181,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":182,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":183,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10377
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":71},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[rec,2], Self:aData[,3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":184,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10382
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":73},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[rec,1], Self:aData[,2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":185,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10395
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":75},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o, rec| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":186,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10391
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":77},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o,| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":187,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10390
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":78},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= {|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":188,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10392
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":79},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":189,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":190,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10385
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":80},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":191,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10384
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":81},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":192,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":193,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":194,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":195,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10385
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":82},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":196,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":197,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":198,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10392
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":83},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":199,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":200,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":201,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":202,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":203,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":204,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":205,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":206,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 196
{"jsonrpc":"2.0","id":207,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":252,"character":22}}}
Content-Length: 160
{"jsonrpc":"2.0","id":208,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10393
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":84},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData \r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":209,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":210,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":211,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10394
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":85},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData p\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":212,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10395
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":86},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData pu\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":213,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":214,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":215,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10397
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":88},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData publ\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":216,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10399
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":90},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData public\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":217,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":218,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":219,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10398
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":91},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid\r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData public\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":220,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":221,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":222,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":223,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 1255
{"jsonrpc":"2.0","id":224,"method":"$totvsserver/compilation","params":{"compilationInfo":{"connectionToken":"djM6MGxkdG9xZjNidW9scndiOG03cXQ5aGF5czVtaTFjOjE6bG9jYWxob3N0OjIwMzAyOjE6Ny4wMC4yMTAzMjRQOjM=:djE6cDEyMTMzOmFkbWluOkZYYzVlSHVlTVdLVVVuU2tPUlpUQU1aNzAyQ3dQaUtseFlFeEx4SzhVLzQ9|djI6MTcwNjkwMzA1MzowOjE6MQ==.ccA6Uuh62QhGBRZPRk2FQ21Q/jtk3V5/VvjR65Zb7pXc8E1i6ErAjG0OQNhTki7lQKb0Q3OThGvyFBtONMwSSUYHPRk4jbS3VMujZgTTSIsxpmd6dOEpjif5A3F3iklLBX2fxPRRWv1+Xa1pbJJSbTuI7t5wzYnw1z2hFlkdyxvoqg976VVB+udD868nYG0ns6r1XdKihA/7ka8KPU/WK/SNcBWORwD/gMlw8SIrqHuRbYoPJXujnXSkU3VY/5IeeRsQgypFViyaGB98bbQ9Y0dC9l0Dbbt8TXKTNsEuGFyuAB3p2CsH15UUoWljj/umGvtNyf7KQbz0vIolkGHdew==","authorizationToken":"","environment":"p12133","includeUris":["file:///m%3A/protheus/includes","file:///m%3A/protheus/includes_tlpp"],"fileUris":["file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"],"compileOptions":{"recompile":true,"debugAphInfo":true,"gradualSending":true,"generatePpoFile":false,"showPreCompiler":false,"priorVelocity":true,"returnPpo":false,"commitWithErrorOrWarning":false},"extensionsAllowed":[".PRW",".PRX",".PRG",".PPX",".PPP",".TLPP",".APW",".APH",".APL",".AHU",".TRES",".PNG",".BMP",".RES",".4GL",".PER",".JS",".RPTDESIGN"],"includeUrisRequired":true}}}
Content-Length: 195
{"jsonrpc":"2.0","id":225,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":18,"character":43}}}
Content-Length: 160
{"jsonrpc":"2.0","id":226,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":227,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":228,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":229,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":230,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":231,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":232,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":233,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":234,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":235,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 195
{"jsonrpc":"2.0","id":236,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":19,"character":54}}}
Content-Length: 10399
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":92},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid \r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData public\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":237,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":238,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":239,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10410
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":102},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid           \r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData public\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":240,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10420
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":112},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid                     \r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData public\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":241,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10424
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":116},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid                         \r\n\tDATA oFrame\r\n\tDATA oButtonsFrame\r\n\tDATA oButtonHome\r\n\tDATA oButtonPgUp\r\n\tDATA oButtonUp\r\n\tDATA oButtonDown\r\n\tDATA oButtonPgDown\r\n\tDATA oButtonEnd\r\n\tDATA aData public\r\n\tDATA nLenData\r\n\tDATA nRecNo\r\n\tDATA nCursorPos\r\n\tDATA nVisibleRows\r\n\tDATA nFreeze\r\n\tDATA nHScroll\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":242,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":243,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":244,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":245,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10441
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":117},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid                          \r\n\tDATA oFrame \r\n\tDATA oButtonsFrame \r\n\tDATA oButtonHome \r\n\tDATA oButtonPgUp \r\n\tDATA oButtonUp \r\n\tDATA oButtonDown \r\n\tDATA oButtonPgDown \r\n\tDATA oButtonEnd \r\n\tDATA aData public \r\n\tDATA nLenData \r\n\tDATA nRecNo \r\n\tDATA nCursorPos \r\n\tDATA nVisibleRows \r\n\tDATA nFreeze \r\n\tDATA nHScroll \r\n \r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":246,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":247,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":248,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10458
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":118},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid                          p\r\n\tDATA oFrame p\r\n\tDATA oButtonsFrame p\r\n\tDATA oButtonHome p\r\n\tDATA oButtonPgUp p\r\n\tDATA oButtonUp p\r\n\tDATA oButtonDown p\r\n\tDATA oButtonPgDown p\r\n\tDATA oButtonEnd p\r\n\tDATA aData public p\r\n\tDATA nLenData p\r\n\tDATA nRecNo p\r\n\tDATA nCursorPos p\r\n\tDATA nVisibleRows p\r\n\tDATA nFreeze p\r\n\tDATA nHScroll p\r\n p\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":249,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10475
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":119},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid                          pu\r\n\tDATA oFrame pu\r\n\tDATA oButtonsFrame pu\r\n\tDATA oButtonHome pu\r\n\tDATA oButtonPgUp pu\r\n\tDATA oButtonUp pu\r\n\tDATA oButtonDown pu\r\n\tDATA oButtonPgDown pu\r\n\tDATA oButtonEnd pu\r\n\tDATA aData public pu\r\n\tDATA nLenData pu\r\n\tDATA nRecNo pu\r\n\tDATA nCursorPos pu\r\n\tDATA nVisibleRows pu\r\n\tDATA nFreeze pu\r\n\tDATA nHScroll pu\r\n pu\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":250,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":251,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":252,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10509
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":121},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid                          publ\r\n\tDATA oFrame publ\r\n\tDATA oButtonsFrame publ\r\n\tDATA oButtonHome publ\r\n\tDATA oButtonPgUp publ\r\n\tDATA oButtonUp publ\r\n\tDATA oButtonDown publ\r\n\tDATA oButtonPgDown publ\r\n\tDATA oButtonEnd publ\r\n\tDATA aData public publ\r\n\tDATA nLenData publ\r\n\tDATA nRecNo publ\r\n\tDATA nCursorPos publ\r\n\tDATA nVisibleRows publ\r\n\tDATA nFreeze publ\r\n\tDATA nHScroll publ\r\n publ\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":253,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10543
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":123},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid                          public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n public\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":254,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":255,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":256,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":257,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10541
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":124},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\nDATA oGrid                          public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n public\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":258,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":259,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":260,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":261,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10543
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":125},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid                          public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n public\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":262,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":263,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":264,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":265,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10518
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":126},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n public\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":266,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":267,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":268,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":269,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10508
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":127},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":270,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":271,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":272,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10513
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":128},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )\r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":273,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":274,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":275,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":276,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 195
{"jsonrpc":"2.0","id":277,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":38,"character":34}}}
Content-Length: 10515
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":130},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )  \r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":278,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10518
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":133},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )     \r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":279,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":280,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":281,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":282,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10580
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":134},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )     \r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )     \r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":283,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":284,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":285,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":286,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10518
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":135},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )     \r\n\tMETHOD isBof()\r\n\tMETHOD isEof()\r\n\tMETHOD ShowData( nFirstRec, nCount )\r\n\tMETHOD ClearRows()\r\n\tMETHOD DoUpdate()\r\n\tMETHOD SelectRow(n)\r\n\tMETHOD GoHome()\r\n\tMETHOD GoEnd()\r\n\tMETHOD GoPgUp()\r\n\tMETHOD GoPgDown()\r\n\tMETHOD GoUp(nOffSet)\r\n\tMETHOD GoDown(nOffSet)\r\n\tMETHOD SetCSS(cCSS)\r\n\tMETHOD SetFreeze(nFreeze)\r\n\tMETHOD SetHScrollState(nHScroll)\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":287,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":288,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":289,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":290,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10534
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":136},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )      \r\n\tMETHOD isBof() \r\n\tMETHOD isEof() \r\n\tMETHOD ShowData( nFirstRec, nCount ) \r\n\tMETHOD ClearRows() \r\n\tMETHOD DoUpdate() \r\n\tMETHOD SelectRow(n) \r\n\tMETHOD GoHome() \r\n\tMETHOD GoEnd() \r\n\tMETHOD GoPgUp() \r\n\tMETHOD GoPgDown() \r\n\tMETHOD GoUp(nOffSet) \r\n\tMETHOD GoDown(nOffSet) \r\n\tMETHOD SetCSS(cCSS) \r\n\tMETHOD SetFreeze(nFreeze) \r\n\tMETHOD SetHScrollState(nHScroll) \r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":291,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":292,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":293,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10550
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":137},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )      p\r\n\tMETHOD isBof() p\r\n\tMETHOD isEof() p\r\n\tMETHOD ShowData( nFirstRec, nCount ) p\r\n\tMETHOD ClearRows() p\r\n\tMETHOD DoUpdate() p\r\n\tMETHOD SelectRow(n) p\r\n\tMETHOD GoHome() p\r\n\tMETHOD GoEnd() p\r\n\tMETHOD GoPgUp() p\r\n\tMETHOD GoPgDown() p\r\n\tMETHOD GoUp(nOffSet) p\r\n\tMETHOD GoDown(nOffSet) p\r\n\tMETHOD SetCSS(cCSS) p\r\n\tMETHOD SetFreeze(nFreeze) p\r\n\tMETHOD SetHScrollState(nHScroll) p\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":294,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":295,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10566
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":138},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )      pu\r\n\tMETHOD isBof() pu\r\n\tMETHOD isEof() pu\r\n\tMETHOD ShowData( nFirstRec, nCount ) pu\r\n\tMETHOD ClearRows() pu\r\n\tMETHOD DoUpdate() pu\r\n\tMETHOD SelectRow(n) pu\r\n\tMETHOD GoHome() pu\r\n\tMETHOD GoEnd() pu\r\n\tMETHOD GoPgUp() pu\r\n\tMETHOD GoPgDown() pu\r\n\tMETHOD GoUp(nOffSet) pu\r\n\tMETHOD GoDown(nOffSet) pu\r\n\tMETHOD SetCSS(cCSS) pu\r\n\tMETHOD SetFreeze(nFreeze) pu\r\n\tMETHOD SetHScrollState(nHScroll) pu\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":296,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":297,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":298,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10582
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":139},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )      pul\r\n\tMETHOD isBof() pul\r\n\tMETHOD isEof() pul\r\n\tMETHOD ShowData( nFirstRec, nCount ) pul\r\n\tMETHOD ClearRows() pul\r\n\tMETHOD DoUpdate() pul\r\n\tMETHOD SelectRow(n) pul\r\n\tMETHOD GoHome() pul\r\n\tMETHOD GoEnd() pul\r\n\tMETHOD GoPgUp() pul\r\n\tMETHOD GoPgDown() pul\r\n\tMETHOD GoUp(nOffSet) pul\r\n\tMETHOD GoDown(nOffSet) pul\r\n\tMETHOD SetCSS(cCSS) pul\r\n\tMETHOD SetFreeze(nFreeze) pul\r\n\tMETHOD SetHScrollState(nHScroll) pul\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":299,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":300,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":301,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":302,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10630
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":140},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows )      public\r\n\tMETHOD isBof() public\r\n\tMETHOD isEof() public\r\n\tMETHOD ShowData( nFirstRec, nCount ) public\r\n\tMETHOD ClearRows() public\r\n\tMETHOD DoUpdate() public\r\n\tMETHOD SelectRow(n) public\r\n\tMETHOD GoHome() public\r\n\tMETHOD GoEnd() public\r\n\tMETHOD GoPgUp() public\r\n\tMETHOD GoPgDown() public\r\n\tMETHOD GoUp(nOffSet) public\r\n\tMETHOD GoDown(nOffSet) public\r\n\tMETHOD SetCSS(cCSS) public\r\n\tMETHOD SetFreeze(nFreeze) public\r\n\tMETHOD SetHScrollState(nHScroll) public\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":303,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":304,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":305,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":306,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10625
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":141},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n \r\n \tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows ) public\r\n\tMETHOD isBof() public\r\n\tMETHOD isEof() public\r\n\tMETHOD ShowData( nFirstRec, nCount ) public\r\n\tMETHOD ClearRows() public\r\n\tMETHOD DoUpdate() public\r\n\tMETHOD SelectRow(n) public\r\n\tMETHOD GoHome() public\r\n\tMETHOD GoEnd() public\r\n\tMETHOD GoPgUp() public\r\n\tMETHOD GoPgDown() public\r\n\tMETHOD GoUp(nOffSet) public\r\n\tMETHOD GoDown(nOffSet) public\r\n\tMETHOD SetCSS(cCSS) public\r\n\tMETHOD SetFreeze(nFreeze) public\r\n\tMETHOD SetHScrollState(nHScroll) public\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":307,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":308,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":309,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":310,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10623
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":142},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows ) public\r\n\tMETHOD isBof() public\r\n\tMETHOD isEof() public\r\n\tMETHOD ShowData( nFirstRec, nCount ) public\r\n\tMETHOD ClearRows() public\r\n\tMETHOD DoUpdate() public\r\n\tMETHOD SelectRow(n) public\r\n\tMETHOD GoHome() public\r\n\tMETHOD GoEnd() public\r\n\tMETHOD GoPgUp() public\r\n\tMETHOD GoPgDown() public\r\n\tMETHOD GoUp(nOffSet) public\r\n\tMETHOD GoDown(nOffSet) public\r\n\tMETHOD SetCSS(cCSS) public\r\n\tMETHOD SetFreeze(nFreeze) public\r\n\tMETHOD SetHScrollState(nHScroll) public\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 160
{"jsonrpc":"2.0","id":311,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 171
{"jsonrpc":"2.0","id":312,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":313,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":314,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 1255
{"jsonrpc":"2.0","id":315,"method":"$totvsserver/compilation","params":{"compilationInfo":{"connectionToken":"djM6MGxkdG9xZjNidW9scndiOG03cXQ5aGF5czVtaTFjOjE6bG9jYWxob3N0OjIwMzAyOjE6Ny4wMC4yMTAzMjRQOjM=:djE6cDEyMTMzOmFkbWluOkZYYzVlSHVlTVdLVVVuU2tPUlpUQU1aNzAyQ3dQaUtseFlFeEx4SzhVLzQ9|djI6MTcwNjkwMzA1MzowOjE6MQ==.ccA6Uuh62QhGBRZPRk2FQ21Q/jtk3V5/VvjR65Zb7pXc8E1i6ErAjG0OQNhTki7lQKb0Q3OThGvyFBtONMwSSUYHPRk4jbS3VMujZgTTSIsxpmd6dOEpjif5A3F3iklLBX2fxPRRWv1+Xa1pbJJSbTuI7t5wzYnw1z2hFlkdyxvoqg976VVB+udD868nYG0ns6r1XdKihA/7ka8KPU/WK/SNcBWORwD/gMlw8SIrqHuRbYoPJXujnXSkU3VY/5IeeRsQgypFViyaGB98bbQ9Y0dC9l0Dbbt8TXKTNsEuGFyuAB3p2CsH15UUoWljj/umGvtNyf7KQbz0vIolkGHdew==","authorizationToken":"","environment":"p12133","includeUris":["file:///m%3A/protheus/includes","file:///m%3A/protheus/includes_tlpp"],"fileUris":["file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"],"compileOptions":{"recompile":true,"debugAphInfo":true,"gradualSending":true,"generatePpoFile":false,"showPreCompiler":false,"priorVelocity":true,"returnPpo":false,"commitWithErrorOrWarning":false},"extensionsAllowed":[".PRW",".PRX",".PRG",".PPX",".PPP",".TLPP",".APW",".APH",".APL",".AHU",".TRES",".PNG",".BMP",".RES",".4GL",".PER",".JS",".RPTDESIGN"],"includeUrisRequired":true}}}
Content-Length: 195
{"jsonrpc":"2.0","id":316,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"},"position":{"line":30,"character":23}}}
Content-Length: 160
{"jsonrpc":"2.0","id":317,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 10616
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp","version":144},"contentChanges":[{"text":"#include \"totvs.ch\"\r\n//------------------------------------------------------------------\r\n//Exemplo de configuração de TGrid em array com navegação por linha\r\n//------------------------------------------------------------------\r\n#define GRID_MOVEUP       0\r\n#define GRID_MOVEDOWN     1\r\n#define GRID_MOVEHOME     2\r\n#define GRID_MOVEEND      3\r\n#define GRID_MOVEPAGEUP   4\r\n#define GRID_MOVEPAGEDOWN 5\r\n//------------------------------------------------------------------\r\n//Valores para a propriedade nHScroll que define o comportamento da\r\n//barra de rolagem horizontal\r\n//------------------------------------------------------------------\r\n#define GRID_HSCROLL_ASNEEDED   0\r\n#define GRID_HSCROLL_ALWAYSOFF  1\r\n#define GRID_HSCROLL_ALWAYSON   2\r\n\r\n// MyGrid ( Classe para encapsular acesso ao componente TGrid )\r\n//------------------------------------------------------------------------------\r\nCLASS MyGrid\r\n\tDATA oGrid public\r\n\tDATA oFrame public\r\n\tDATA oButtonsFrame public\r\n\tDATA oButtonHome public\r\n\tDATA oButtonPgUp public\r\n\tDATA oButtonUp public\r\n\tDATA oButtonDown public\r\n\tDATA oButtonPgDown public\r\n\tDATA oButtonEnd public\r\n\tDATA aData public\r\n\tDATA nLenData public\r\n\tDATA nRecNo public\r\n\tDATA nCursorPos public\r\n\tDATA nVisibleRows public\r\n\tDATA nFreeze public\r\n\tDATA nHScroll public\r\n\r\n\tMETHOD New(oDlg) CONSTRUCTOR public\r\n\tMETHOD onMove( o,nMvType,nCurPos,nOffSet,nVisRows ) public\r\n\tMETHOD isBof() public\r\n\tMETHOD isEof() public\r\n\tMETHOD ShowData( nFirstRec, nCount ) public\r\n\tMETHOD ClearRows() public\r\n\tMETHOD DoUpdate() public\r\n\tMETHOD SelectRow(n) public\r\n\tMETHOD GoHome() public\r\n\tMETHOD GoEnd() public\r\n\tMETHOD GoPgUp() public\r\n\tMETHOD GoPgDown() public\r\n\tMETHOD GoUp(nOffSet) public\r\n\tMETHOD GoDown(nOffSet) public\r\n\tMETHOD SetCSS(cCSS) public\r\n\tMETHOD SetFreeze(nFreeze) public\r\n\tMETHOD SetHScrollState(nHScroll) public\r\nENDCLASS\r\nMETHOD New(oDlg, aData) CLASS MyGrid\r\n\tLocal oFont\r\n\r\n\t::oFrame:= tPanel():New(0,0,,oDlg,,,,,,200,200 )\r\n\t::nRecNo:= 1\r\n\t::nCursorPos:= 0\r\n\t::nVisibleRows:= 14\r\n\t// Forçado para 1o ::GoEnd()\r\n\t::aData:= aData\r\n\t::nLenData:= Len(aData)\r\n\t::oGrid:= tGrid():New( ::oFrame )\r\n\t::oGrid:Align:= CONTROL_ALIGN_ALLCLIENT\r\n\r\n\t//oFont := TFont():New('Tahoma',,-32,.T.)\r\n\t//::oGrid:SetFont(oFont)\r\n\t//::oGrid:setRowHeight(50)\r\n\r\n\t::oButtonsFrame:= tPanel():New(0,0,, ::oFrame,,,,,, 10,200,.F.,.T. )\r\n\t::oButtonsFrame:Align:= CONTROL_ALIGN_RIGHT\r\n\t::oButtonHome:= tBtnBmp():NewBar( \"VCTOP.BMP\",,,,, {||::GoHome()},,::oButtonsFrame )\r\n\t::oButtonHome:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonPgUp:= tBtnBmp():NewBar( \"VCPGUP.BMP\",,,,, {||::GoPgUp()},,::oButtonsFrame )\r\n\t::oButtonPgUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonUp:= tBtnBmp():NewBar( \"VCUP.BMP\",,,,,{||::GoUp(1)},,::oButtonsFrame )\r\n\t::oButtonUp:Align:= CONTROL_ALIGN_TOP\r\n\t::oButtonEnd:= tBtnBmp():NewBar( \"VCBOTTOM.BMP\",,,,, {||::GoEnd()},,::oButtonsFrame )\r\n\t::oButtonEnd:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonPgDown:= tBtnBmp():NewBar( \"VCPGDOWN.BMP\",,,,, {||::GoPgDown()},,::oButtonsFrame )\r\n\t::oButtonPgDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oButtonDown:= tBtnBmp():NewBar( \"VCDOWN.BMP\",,,,, {||::GoDown(1)},,::oButtonsFrame )\r\n\t::oButtonDown:Align:= CONTROL_ALIGN_BOTTOM\r\n\t::oGrid:addColumn( 1, \"Código\", 50, CONTROL_ALIGN_LEFT )\r\n\t::oGrid:addColumn( 2, \"Descrição\", 150, 0 )\r\n\t::oGrid:addColumn( 3, \"Valor\", 50, CONTROL_ALIGN_RIGHT )\r\n\t::oGrid:bCursorMove:= {|o,nMvType,nCurPos,nOffSet,nVisRows| ::onMove(o,nMvType,nCurPos,nOffSet,nVisRows) }\r\n\t::ShowData(1)\r\n\t::SelectRow( ::nCursorPos )\r\n\t// configura acionamento do duplo clique\r\n\t::oGrid:bLDblClick:= {|| MsgStop(\"oi\") }\r\nRETURN\r\nMETHOD isBof() CLASS MyGrid\r\nRETURN  ( ::nRecno==1 )\r\nMETHOD isEof() CLASS MyGrid\r\nRETURN ( ::nRecno==::nLenData )\r\nMETHOD GoHome() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\t::nRecno = 1\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( 1, ::nVisibleRows )\r\n\t::nCursorPos:= 0\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoEnd() CLASS MyGrid\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t::nRecno:= ::nLenData\r\n\t::oGrid:ClearRows()\r\n\t::ShowData( ::nRecno - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t::nCursorPos:= ::nVisibleRows-1\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgUp() CLASS MyGrid\r\n\tif ::isBof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a 1a linha da grid\r\n\tif ::nCursorPos != 0\r\n\t\t::nRecno -= ::nCursorPos\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::nCursorPos:= 0\r\n\t\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\telse\r\n\t\t::nRecno -= ::nVisibleRows\r\n\t\tif ::nRecno <= 0\r\n\t\t\t::nRecno:=1\r\n\t\tendif\r\n\t\t::oGrid:ClearRows()\r\n\t\t::ShowData( ::nRecno, ::nVisibleRows )\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoPgDown() CLASS MyGrid\r\n\tLocal nLastVisRow\r\n\r\n\tif ::isEof()\r\n\t\treturn\r\n\tendif\r\n\r\n\t// força antes ir para a última linha da grid\r\n\tnLastVisRow:= ::nVisibleRows-1\r\n\r\n\tif ::nCursorPos!=nLastVisRow\r\n\r\n\t\tif ::nRecno+nLastVisRow > ::nLenData\r\n\t\t\tnLastVisRow:= ( ::nRecno+nLastVisRow ) - ::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\telse\r\n\t\t\t::nRecNo += nLastVisRow\r\n\t\tendif\r\n\r\n\t\t::nCursorPos:= nLastVisRow\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\telse\r\n\t\t::oGrid:ClearRows()\r\n\t\t::nRecno += ::nVisibleRows\r\n\r\n\t\tif ::nRecno > ::nLenData\r\n\t\t\t::nVisibleRows = ::nRecno-::nLenData\r\n\t\t\t::nRecno:= ::nLenData\r\n\t\tendif\r\n\r\n\t\t::ShowData( ::nRecNo - ::nVisibleRows + 1, ::nVisibleRows )\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\n\r\nMETHOD GoUp(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isBof()\r\n\t\tRETURN\r\n\tendif\r\n\tif ::nCursorPos==0\r\n\t\t::oGrid:scrollLine(-1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos -= nOffSet\r\n\tendif\r\n\t::nRecno -= nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= 0\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD GoDown(nOffSet) CLASS MyGrid\r\n\tLocal lAdjustCursor:= .F.\r\n\tif ::isEof()\r\n\t\tRETURN\r\n\tendif\r\n\r\n\tif ::nCursorPos==::nVisibleRows-1\r\n\t\t::oGrid:scrollLine(1)\r\n\t\tlAdjustCursor:= .T.\r\n\telse\r\n\t\t::nCursorPos += nOffSet\r\n\tendif\r\n\t::nRecno += nOffSet\r\n\r\n\t// atualiza linha corrente\r\n\t::oGrid:setRowData( ::nCursorPos, {|o| { ::aData[::nRecno,1], ::aData[::nRecno,2], ::aData[::nRecno,3] } } )\r\n\tif lAdjustCursor\r\n\t\t::nCursorPos:= ::nVisibleRows-1\r\n\tendif\r\n\t::SelectRow( ::nCursorPos )\r\nRETURN\r\nMETHOD onMove( oGrid,nMvType,nCurPos,nOffSet,nVisRows ) CLASS MyGrid\r\n\t::nCursorPos:= nCurPos\r\n\t::nVisibleRows:= nVisRows\r\n\r\n\tif nMvType == GRID_MOVEUP\r\n\t\t::GoUp(nOffSet)\r\n\telseif nMvType == GRID_MOVEDOWN\r\n\t\t::GoDown(nOffSet)\r\n\telseif nMvType == GRID_MOVEHOME\r\n\t\t::GoHome()\r\n\telseif nMvType == GRID_MOVEEND\r\n\t\t::GoEnd()\r\n\telseif nMvType == GRID_MOVEPAGEUP\r\n\t\t::GoPgUp()\r\n\telseif nMvType == GRID_MOVEPAGEDOWN\r\n\t\t::GoPgDown()\r\n\tendif\r\nRETURN\r\nMETHOD ShowData( nFirstRec, nCount ) CLASS MyGrid\r\n\tlocal i, nRec, ci\r\n\tDEFAULT nCount:=30\r\n\r\n\tfor i=0 to nCount-1\r\n\t\tnRec:= nFirstRec+i\r\n\t\tif nRec > ::nLenData\r\n\t\t\tRETURN\r\n\t\tendif\r\n\t\tci:= Str( nRec )\r\n\t\tcb:= \"{|o| { Self:aData[\"+ci+\",1], Self:aData[\"+ci+\",2], Self:aData[\"+ci+\",3] } }\"\r\n\t\t::oGrid:setRowData( i, &cb )\r\n\tnext i\r\nRETURN\r\nMETHOD ClearRows() CLASS MyGrid\r\n\t::oGrid:ClearRows()\r\n\t::nRecNo:=1\r\nRETURN\r\nMETHOD DoUpdate() CLASS MyGrid\r\n\t::nRecNo:=1\r\n\t::Showdata(1)\r\n\t::SelectRow(0)\r\nRETURN\r\nMETHOD SelectRow(n) CLASS MyGrid\r\n\tvalor := n - ::nCursorPos\r\n\t::nRecno += valor\r\n\tif ::nRecno <= 0\r\n\t\t::nRecno = 1\r\n\tendif\r\n\t::nCursorPos:=n\r\n\t::oGrid:setSelectedRow(n)\r\nRETURN\r\nMETHOD SetCSS(cCSS) CLASS MyGrid\r\n\t::oGrid:setCSS(cCSS)\r\nRETURN\r\n\r\nMETHOD SetFreeze(nFreeze) CLASS MyGrid\r\n\t::nFreeze := nFreeze\r\n\t::oGrid:nFreeze := nFreeze\r\nRETURN\r\nMETHOD SetHScrollState(nHScroll) CLASS MyGrid\r\n\t::nHScroll := nHScroll\r\n\t::oGrid:nHScroll := nHScroll\r\nRETURN\r\n\r\n// U_TSTGRID ( Executa Grid )\r\n//------------------------------------------------------------------\r\nUSER FUNCTION TSTGRID()\r\n\tLocal oDlg, aData:={}, i, oGridLocal, oEdit, nEdit:= 0\r\n\tLocal oBtnAdd, oBtnClr, oBtnLoa\r\n\r\n\t// configura pintura da TGridLocal\r\n\tcCSS:= \"QTableView{ alternate-background-color: red; background: yellow; selection-background-color: #669966 }\"\r\n\r\n\t// configura pintura do Header da TGrid\r\n\tcCSS+= \"QHeaderView::section { background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343,  stop:1 #656565); color: white; padding-left: 4px; border: 1px solid #6c6c6c; }\"\r\n\r\n\t// Dados\r\n\tfor i:=1 to 10000\r\n\t\tcCodProd:= StrZero(i,6)\r\n\t\tif i<3\r\n\t\t\t// inserindo imagem nas 2 primeiras linhas\r\n\t\t\tcProd:= \"RPO_IMAGE=OK.BMP\"\r\n\t\telse\r\n\t\t\tcProd:= 'Produto '+cCodProd\r\n\t\tendif\r\n\r\n\t\tcVal = Transform( 10.50, \"@E 99999999.99\" )\r\n\t\tAADD( aData, { cCodProd, cProd, cVal } )\r\n\tnext\r\n\r\n\tDEFINE DIALOG oDlg FROM 0,0 TO 500,500 PIXEL\r\n\r\n\toGrid:= MyGrid():New(oDlg,aData)\r\n\toGrid:SetFreeze(2)\r\n\toGrid:SetCSS(cCSS)\r\n\t//oGrid:SetHScrollState(GRID_HSCROLL_ALWAYSON) // Somente build superior a 131227A\r\n\r\n\t// Aplica configuração de pintura via CSSoGrid:SetCSS(cCSS)\r\n\t@ 210, 10 GET oEdit VAR nEdit OF oDlg PIXEL PICTURE \"99999\"\r\n\t@ 210, 70 BUTTON oBtnAdd PROMPT \"Go\" OF oDlg PIXEL ACTION oGrid:SelectRow(nEdit)\r\n\t@ 210, 100 BUTTON oBtnClr PROMPT \"Clear\" OF oDlg PIXEL ACTION oGrid:ClearRows()\r\n\t@ 210, 150 BUTTON oBtnLoa PROMPT \"Update\" OF oDlg PIXEL ACTION oGrid:DoUpdate()\r\n\tACTIVATE DIALOG oDlg CENTERED\r\n\r\nRETURN\r\n"}]}}
Content-Length: 171
{"jsonrpc":"2.0","id":318,"method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 160
{"jsonrpc":"2.0","id":319,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 166
{"jsonrpc":"2.0","id":320,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 164
{"jsonrpc":"2.0","id":321,"method":"textDocument/documentLink","params":{"textDocument":{"uri":"file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"}}}
Content-Length: 1255
{"jsonrpc":"2.0","id":322,"method":"$totvsserver/compilation","params":{"compilationInfo":{"connectionToken":"djM6MGxkdG9xZjNidW9scndiOG03cXQ5aGF5czVtaTFjOjE6bG9jYWxob3N0OjIwMzAyOjE6Ny4wMC4yMTAzMjRQOjM=:djE6cDEyMTMzOmFkbWluOkZYYzVlSHVlTVdLVVVuU2tPUlpUQU1aNzAyQ3dQaUtseFlFeEx4SzhVLzQ9|djI6MTcwNjkwMzA1MzowOjE6MQ==.ccA6Uuh62QhGBRZPRk2FQ21Q/jtk3V5/VvjR65Zb7pXc8E1i6ErAjG0OQNhTki7lQKb0Q3OThGvyFBtONMwSSUYHPRk4jbS3VMujZgTTSIsxpmd6dOEpjif5A3F3iklLBX2fxPRRWv1+Xa1pbJJSbTuI7t5wzYnw1z2hFlkdyxvoqg976VVB+udD868nYG0ns6r1XdKihA/7ka8KPU/WK/SNcBWORwD/gMlw8SIrqHuRbYoPJXujnXSkU3VY/5IeeRsQgypFViyaGB98bbQ9Y0dC9l0Dbbt8TXKTNsEuGFyuAB3p2CsH15UUoWljj/umGvtNyf7KQbz0vIolkGHdew==","authorizationToken":"","environment":"p12133","includeUris":["file:///m%3A/protheus/includes","file:///m%3A/protheus/includes_tlpp"],"fileUris":["file:///w%3A/ws_tds_vscode/tds-dito/advpl_sources/src/tgrid.tlpp"],"compileOptions":{"recompile":true,"debugAphInfo":true,"gradualSending":true,"generatePpoFile":false,"showPreCompiler":false,"priorVelocity":true,"returnPpo":false,"commitWithErrorOrWarning":false},"extensionsAllowed":[".PRW",".PRX",".PRG",".PPX",".PPP",".TLPP",".APW",".APH",".APL",".AHU",".TRES",".PNG",".BMP",".RES",".4GL",".PER",".JS",".RPTDESIGN"],"includeUrisRequired":true}}}
